package clueless.api.verifier

import clueless.api.controllers.ProofController
import clueless.api.controllers.models.Person
import clueless.api.hyperledger.HyperledgerIssuer
import clueless.api.hyperledger.HyperledgerLedger
import clueless.api.hyperledger.HyperledgerVerifier
import clueless.api.hyperledger.HyperledgerWallet
import clueless.api.issuer.CredentialDefinition
import clueless.api.master.MasterWrapper
import clueless.api.wallet.WalletWrapper
import org.hyperledger.indy.sdk.ledger.LedgerResults
import org.hyperledger.indy.sdk.pool.Pool
import org.hyperledger.indy.sdk.wallet.Wallet
import org.json.JSONObject
import org.mockito.Mockito
import org.mockito.Mockito.`when`
import org.testng.annotations.BeforeTest
import org.testng.annotations.Test
import kotlin.test.assertTrue

class VerifierWrapperTest {
    private var verifier = Mockito.mock(HyperledgerVerifier::class.java)
    private var credDef = Mockito.mock(CredentialDefinition::class.java)
    private var issuer = Mockito.mock(HyperledgerIssuer::class.java)
    private var ledger = Mockito.mock(HyperledgerLedger::class.java)
    private var poolMockito: Pool = Mockito.mock(Pool::class.java)
    private var parsedSchemaResponse = Mockito.mock(LedgerResults.ParseResponseResult::class.java)


    private var walletMockito: Wallet = Mockito.mock(Wallet::class.java)
    private var wallet = Mockito.mock(HyperledgerWallet::class.java)

    private val exampleProof =
            "{\"proof\":{\"proofs\":[{\"primary_proof\":{\"eq_proof\":{\"revealed_attrs\":{\"name\":\"5145233466663057870\"},\"a_prime\":\"54730261067721604196347324492115390369487969652135977487831402912022384751776578227023011300506772168464664976552087219824660410813324554978890743325292894825419283133320357477786148943311176038478964997941007565157751161028370057932676229790102407059446922344825830945761125490702303341121393221333177047906084649170908319424244678601286802862486493578985241790111269540075506287370018527579890973253942575401076292885453500755699306861178998438790753685124958106769847498544198101747935417677113518429771179314079643530321674856449276766105318206940816111196663287677754116169834934927270204734138018029628135842886\",\"e\":\"168166410858257047156479035041339513115495932096065535266929727561771570910982318192860039873059255775151679311863956679278043502372566791\",\"v\":\"346288806368043189421657637932434907298735550966499227163302416504353213553632252257827860599365662370444445476881039773118815382031159843584388675874553165857081439009037694447552611866191362186518890382427593292334388945360933378017804916160557214761527308440793577663251569691248807326529141338108054957677970176562902459143386835843314640067527019175397697116306964143115334752966896939105814180860903178377734263255646546848541963866774318534867996193102860997116807882212097592937352943512479823090187820217481470346910303756161388697568852235763912397352872799402124605707054286194838445940841866842523000285042873963660190877657622632588521915766754109233337942026355583306671055286175643279520920358469709849939591158727266144739698496936455833485228267006774323557225566365579140704575037174141030601024467739327408640159475175315508867007467670335439291938477347480558729099746531441502768754602207632720763932\",\"m\":{\"licence-level\":\"14004172388979281813203661848920075164651611566146429285294239509075958981100452862868302193517128123180647583533142698183700377538305829205170506863155315826269282144874762501267\",\"master_secret\":\"5463845499965935096377297948876025657132794915282951211328664946053171940316321199746521583611140609489351795164539221059197411568269561726345840194312531611275937121608285584302\",\"age\":\"505557312998718945650796271395938794700005110096566609240604539855393420701514195057992495081094204293819102409277537572535520500737136173153719971073741224792760438089945011951\"},\"m2\":\"8646276147661237643992177157864219479448761354982478314292659184391700519857913286830268165403724276558550145985679215489943399123985800662493806036436209101310726833114073618362\"},\"ge_proofs\":[{\"u\":{\"1\":\"13060503108288907846369738812070663713020726758549090335114954812538388144624396228926521196436307948498400272365196166043068722543662716881782279858459063401476596186728382957333\",\"3\":\"15716704622705315297992957416605161191058532431188075157753377384858434249549903998156169967491832110612254669234776066709874528099477443820304496030497532964505029192329075117446\",\"2\":\"14634230963978712421063102798292765639356204620504254438253238143053112355379021497996736817534989013396124538794638419391408536264737052522596185620931394494828258675097068738802\",\"0\":\"12937625409354237511894768344118806566632372410145620726315972882442359010047143159160023901306381164005933753388569032976208622196284736990706955831993140625090380876597824004997\"},\"r\":{\"DELTA\":\"539903447495235900843087553354190140356317827805609217521273040306519701885508688477967510558775958245324229595747855269740066027731031820771192094250410479056907110193569320136742446942764471057669003967052679076798163795649386850224247497376783854186501662155117789708299180287280550295017151418625289774098725544669454529342981598114574305475097929348759891789663346957576115159394279703801363904351341803817052589160425480447382812048638747642916454331953926687699448717167300720275154438356099256688865597200341989578779235669628256453282907627910564099883568212574375778305218873361353260293482964382622915265861400744570065537707929017603064513607024236431881565638142856348892348137322109344801868350168742033\",\"1\":\"1542873632619710047159705602286702915751252031924772492052308705025077333276667219320825907862204148667746321363334856987498954967736979600334100008048687859021337763291431861178426821334078933822596234302738594529056501289849100679081868048487390585167920564104616211283979844206108143963227010110856125926501177096180101039189275772351221748287739743302984701160923935472677467119693592539680100950405605337890117702467959601314848575390753998765541872784955742169951155106259759971240755824703699752276906996658244153386711959855598207403304360278540402620984296434448220727408208317311543783934639127058446714473915940957825645555158688939768595691061273986445273704582140150644216501920165021279128417053834682874\",\"3\":\"282599483607667858443907042986739662398469284211587108482002112460355166245193985185114403655285126269183511674283797172473780200535351276550947874816391468144576409435596639110987942172625922740547650848642442415660932967858092357474032304574942288652099170142604360617554917323958450119661280268571165656806706470911571927026143149383774424660386558071139674762707073837119496138929268118873306835417592170568038574781604046098954855469148783919415348908335549142910941247351543687800873911722187024208125713457445251318469126238687696348075519668658833764898904470551191064646470328317162345687653486808924971853529441486404571780338954742340771120875764983034221750062812299961607760988064083854055570533008896014\",\"0\":\"1525800604286856153168518140198298373465766506635443742038067764741490709380973196842347169693654790093892345713717659023073370095163863577218878496594236069850562337316453559922536748611193304508009618413059220999042584185761278750135101717025075257103839654960685247091787138502388910090666113117107903534973482066970928216402833204597568783019955879887337306561485359493494103233080701283647488159284956084058626151324488478534090988701617958799067409801769504215946437527051947890908383431107694337486592748957985873919264702558828616243632414865310420833471322762770037212528079525098762532913441561742739436880516127820911672807605865129501563774110773237108526371938798178161050943244121277363169562047002227040\",\"2\":\"391875792184466262697355988624296271590272731406120154282007715329826843703062961670904759118947511795485709638008637462851087874930072175238442521610947813879975569154832682277543515024720592802068115922715067564425792566609758547280758272272397915249719855579141389502442805169663959060326200914781696743201121183595041820995236556369845845480932407035872734413868224860534254313248623262970513223750229680380404316637866751045021577811218144028574305893491347032614743699452522035394520404141095039380649649066852846588572018320173984006419634013134310947291746812824721981854000927533181151866711924501386801445493316813776867284400917036541830794117838443023917424459827784115569239250955795633803584988573304809\"},\"mj\":\"505557312998718945650796271395938794700005110096566609240604539855393420701514195057992495081094204293819102409277537572535520500737136173153719971073741224792760438089945011951\",\"alpha\":\"63164037459469545675976183416047991311824805609255499189098586069304126818023765779073354128205513036292383516337496653558136271921127662656180667098085359223792039077773170257749700982697623959668948755316718942565466743879285744835029173204715351241121691967992482371817600881456634678264479771843016246407008897918484272727018766219771892813885490308568337141328056918179678855594767295574642902200753811760194583425735187322639620273990100311740244621016319038016527815354466342539511300660879782423730891338827345163911596278604751423661932709248202929422541331770557368137319610208602696152870430116927651586348366500955136549854075967491636974773780676423192286386629971764156188162705232213227298877516450506306835537998780822924606690638857149768124124343106584964567128684641801637594415752137153612788575898763962423297769986946\",\"t\":{\"1\":\"52583274763651060649030195055016136933885833750824419201565576229662039134922264407132899458599209237000180954505605512373485782150195982787265902424783206766814221461106854175214314038155521951965848367316563888894160331513832850536487681867175066980707630451570262523153146914328481402350302607519534767402736613161913845094871437465060682048831387835045329413591128424898687353132966500033280255793725348700221753288273649584486281985399507393690524854828207008074336353797300528360736332415661174791876382385227536020937080710180135493525292157787235600186433498431183556884137598285891829616446193955573372347430\",\"2\":\"58223551634057780988950897065323107646347541047835572910301589381221213755380891881343653401212372110434421473347302036635988571874684104526982515210662579394669240322629607866841328801386227260220339012650627918293245849706844785940453041332318846340648084077335087046475916482510411150830048066174031477358010465240873839820376808649162667631057357237553931741698398759147402075902279488617646134348977377839806199032685101413803624321534983421519842793712371142495910940317328628158693820190711320155331840145172563761598594971343489952606783049485298752847199717739796232771153520288737815501176417175838253728893\",\"DELTA\":\"5042028732526617176188411200203284317807385419635731923931631893459376451085927101732490886631857727320670021016269209480922315831958613247082741229181542764073947845953926842376379782249209321594871249277917347126539617891200987994844928773571421872873206908383075443705089164380712223860405228624692010794694976096511376423548050827942280539589020214470134328731884608317139725603321228109502135765179798667200458319576742661711738857948458587670209074283356285737566953752689735679180692328077543483936751024950384886288194798572598842320241653668273143385209987100163509720602163083336723536488427394794440584511\",\"3\":\"97906724049927094099825774442184422611048815213063150245436251400962514516009865936027298801648506630034046074086608363592447607193241357065229895676119575305259005400716688475839291586754583668003847882879295189154457480796399794677602375009657131455583941673579922468897082139115940974014847667253700077959501723277183407354224519495826209583241815754521168752651005348903454598806532458878954805003451873441167828873355066330545676651125964373827458705401576789163703966761369197772538265126056165348324392006911298302196440008643188736995279363154257252026575073133530245853936214026737682027438337128728379896432\",\"0\":\"21364846530356025634145583756395281324677543704836461828803552942091955570268732999591214395457097737601584038288949839721864188486448009912998568878321064279801761456058931536707575772518507909768725586121425779186474055363269502828762394161059068005931461582036578745440409383266394347149996939876784685777170200232774916755536380741787209947104237533174911059144215149708314232709705507445693510396921356447421627089574019811485305505655834872516393970943540646406767913048948835261470644137803309181254901691473829774308458573814879696736881196629489493591225572725526436235393179448361483550503297549617428225427\"},\"predicate\":{\"attr_name\":\"age\",\"p_type\":\"GE\",\"value\":18}}]},\"non_revoc_proof\":null}],\"aggregated_proof\":{\"c_hash\":\"69552070320723949313415529177492334389495506482725691450748728949098335589280\",\"c_list\":[[1,177,140,19,245,77,188,152,39,34,176,192,161,226,14,56,64,17,34,112,185,136,7,232,64,118,58,215,200,235,87,248,53,6,252,250,170,37,165,119,46,154,202,250,202,106,116,91,251,198,236,67,201,206,178,117,244,5,86,103,112,137,3,79,188,226,160,31,234,255,118,218,102,68,86,224,13,184,109,212,156,108,20,201,102,33,246,170,105,156,126,86,167,183,101,120,178,142,10,135,85,7,191,82,177,114,68,48,92,59,30,82,128,17,64,251,243,178,3,147,233,137,97,40,88,177,3,18,247,237,15,72,95,206,212,140,15,158,127,94,139,154,130,61,142,101,146,189,72,77,172,121,184,210,152,74,195,88,201,185,217,148,117,202,26,148,152,165,10,114,201,123,168,98,133,53,74,25,100,140,86,190,160,19,209,64,102,6,81,27,17,41,116,23,157,1,49,50,70,127,91,188,121,121,220,49,15,107,182,224,11,86,80,124,253,38,238,182,250,31,84,146,196,148,241,163,54,66,161,127,122,151,47,252,33,155,66,221,11,11,38,142,214,106,112,107,205,153,76,47,230,219,249,51,32,36,70],[169,61,255,209,178,197,65,70,103,188,105,141,46,220,124,32,17,179,43,87,201,169,92,229,52,48,128,151,44,186,164,226,207,128,91,195,189,41,68,15,33,93,73,85,223,178,145,160,43,126,45,206,2,241,70,155,153,230,30,147,208,77,236,215,142,56,242,24,15,60,16,189,156,164,59,234,83,121,228,70,222,112,57,38,237,139,108,244,206,23,233,213,99,134,155,83,179,158,207,28,89,223,29,99,149,82,178,30,252,30,123,128,151,90,228,106,0,57,109,194,195,232,150,16,36,36,228,237,238,106,228,34,255,232,62,152,60,108,174,128,116,186,12,161,164,28,180,97,207,198,77,144,74,249,171,238,3,136,147,192,125,240,170,227,60,189,122,169,247,119,11,1,56,240,226,103,229,31,166,181,87,75,154,196,129,62,220,4,155,85,16,59,104,205,136,15,197,145,41,174,15,113,79,130,115,206,166,204,249,205,186,201,210,232,12,139,228,99,193,91,31,215,168,100,59,238,169,127,102,39,10,144,12,203,94,56,1,94,98,135,238,186,102,46,220,13,143,60,111,7,145,31,14,24,221,147],[1,160,138,46,126,211,143,13,91,83,246,217,39,245,235,62,3,175,70,3,126,40,191,41,70,192,233,187,213,238,93,148,60,227,36,224,179,253,74,111,247,11,95,40,149,184,151,230,152,209,215,205,177,251,20,156,169,193,146,75,32,65,202,106,160,131,131,232,182,75,63,196,102,221,51,158,99,131,169,92,170,215,38,24,252,176,88,5,153,205,213,101,223,39,124,46,223,16,99,44,62,102,47,100,133,15,209,62,72,40,44,102,172,227,95,190,61,247,192,3,10,169,109,159,105,134,61,210,213,80,92,57,149,92,87,179,124,115,48,88,63,234,240,175,29,179,238,124,181,61,161,94,140,36,227,166,134,221,213,139,25,173,173,242,161,11,38,251,24,192,35,220,244,40,29,91,182,97,190,231,48,137,168,82,184,99,180,144,146,16,25,79,159,1,42,112,225,102,216,6,244,66,197,123,125,3,44,83,136,185,142,102,154,8,189,2,243,76,187,136,137,215,250,70,195,138,210,34,11,18,116,37,56,222,125,28,195,132,43,111,92,229,47,221,242,184,70,167,38,23,14,92,225,99,72,228,38],[1,205,56,40,181,130,98,109,86,23,235,247,235,90,62,25,86,193,56,77,240,196,153,228,204,197,99,110,167,202,171,53,224,179,172,155,87,80,221,24,141,92,31,233,135,142,116,77,61,16,153,248,251,63,21,105,227,47,230,117,96,221,222,204,220,28,110,246,212,6,25,196,204,53,93,226,250,164,203,204,174,113,62,163,100,248,26,84,20,142,249,111,71,237,193,173,117,76,35,58,52,191,20,216,229,50,99,127,57,173,222,36,76,239,204,146,177,34,64,210,35,143,27,125,187,35,5,93,101,250,56,8,94,24,23,138,74,240,227,10,186,83,173,222,135,24,57,116,241,241,201,22,177,76,48,9,243,55,195,133,27,41,27,9,230,140,136,204,43,17,137,127,234,80,114,148,244,4,23,53,125,135,130,0,125,222,13,149,6,77,118,155,85,170,107,195,114,5,54,199,143,163,93,122,128,97,104,176,148,227,107,220,214,57,87,100,93,187,146,161,201,38,54,231,245,92,61,119,145,254,176,234,248,206,116,80,188,116,211,8,145,44,206,32,146,237,236,178,25,203,149,170,186,42,221,68,125],[3,7,146,22,5,100,77,64,91,19,73,38,188,94,181,101,143,43,2,115,4,59,84,159,180,124,181,226,14,44,247,159,100,150,206,83,153,216,24,104,199,203,38,133,64,51,210,113,0,76,13,20,128,255,160,29,177,18,207,132,65,150,131,215,92,37,61,202,192,101,250,152,157,139,154,69,165,141,12,88,132,232,24,249,169,53,198,15,230,152,38,120,205,46,226,45,68,137,160,58,179,147,86,140,79,214,50,20,208,140,171,166,111,208,100,89,134,155,129,0,108,176,54,209,6,40,197,103,220,196,127,67,54,74,234,20,169,110,22,201,147,124,134,15,11,48,148,149,157,224,159,184,192,47,210,115,132,166,148,75,142,186,3,248,118,228,125,240,146,209,67,228,170,10,250,118,247,90,222,17,244,246,10,26,163,255,214,157,117,118,153,182,214,146,200,149,245,209,87,38,90,194,133,136,252,4,153,165,223,241,99,44,21,123,243,142,253,248,203,101,136,84,63,83,179,212,204,1,108,235,239,83,179,120,169,150,196,144,219,242,16,252,41,54,187,228,48,135,251,25,39,71,151,4,161,178,112],[39,240,200,156,183,241,148,219,255,22,4,194,188,232,241,211,187,115,83,206,82,99,204,215,108,88,28,218,25,242,211,179,15,71,49,236,145,216,75,24,175,207,203,60,45,146,199,70,56,200,147,114,118,147,214,200,122,121,247,86,248,150,170,33,153,198,131,179,7,136,255,150,248,236,195,185,234,165,12,210,175,111,48,115,208,242,76,252,220,147,221,132,239,91,25,230,198,34,205,84,72,62,91,49,61,148,104,250,108,76,131,178,106,81,95,45,209,182,197,116,35,170,204,166,220,41,183,205,9,179,17,218,178,105,107,126,209,135,241,180,191,199,160,12,101,142,210,50,12,246,255,153,156,109,171,95,97,229,19,237,181,166,126,12,255,114,215,138,138,240,240,78,147,210,104,55,138,255,212,177,174,104,78,57,30,56,70,55,159,189,30,159,187,211,81,42,118,123,238,12,35,152,149,174,236,168,208,220,246,37,43,77,192,33,131,127,116,174,135,19,68,49,141,170,174,85,103,194,192,18,235,4,48,49,239,204,81,150,10,135,180,53,239,154,232,188,78,164,117,131,59,13,62,27,109,63]]}},\"requested_proof\":{\"revealed_attrs\":{\"attr1_referent\":{\"sub_proof_index\":0,\"raw\":\"test-name\",\"encoded\":\"5145233466663057870\"}},\"self_attested_attrs\":{},\"unrevealed_attrs\":{\"attr2_referent\":{\"sub_proof_index\":0}},\"predicates\":{\"predicate1_referent\":{\"sub_proof_index\":0}}},\"identifiers\":[{\"schema_id\":\"NcYxiDXkpYi6ov5FcYDi1e:2:driving-licence:1.0\",\"cred_def_id\":\"NcYxiDXkpYi6ov5FcYDi1e:3:CL:NcYxiDXkpYi6ov5FcYDi1e:2:driving-licence:1.0:Tag1\",\"rev_reg_id\":null,\"timestamp\":null}]}"
    private val exampleProofRequestJson =
            ProofController().getProofRequest()

    private lateinit var walletWrapper: WalletWrapper
    private lateinit var masterWrapper: MasterWrapper
    private lateinit var verifierWrapper: VerifierWrapper

    private lateinit var verifierPerson: Person
    @BeforeTest
    fun setupApi() {
        walletWrapper = WalletWrapper(wallet)
        masterWrapper = MasterWrapper(issuer,ledger, walletWrapper,poolMockito)
        verifierWrapper = VerifierWrapper(verifier,   masterWrapper)
        verifierPerson = Person("verifier-did", walletMockito, "verifier-secret", "test-name")


    }
    @Test
    fun `verifyProof() correctly verifies a proof`() {
        val schemaId = "schema-id"
        val schemaIds: List<String> = mutableListOf(schemaId)
        val schemaJSON = "{schema-id:schema-json}"
        val credDefId = "cred-def-id"
        val credDefJson = "{cred-def-id:cred-def-attr}"
        val credentialDefinition = CredentialDefinition(credDefId, credDefJson)
        val credDefIdtoJSON = JSONObject().put(credDefId, JSONObject(credDefJson))
        val credentialDefinitions: List<CredentialDefinition> = mutableListOf(credentialDefinition)
        val schemaRequest = "schema-request"
        val getSchemaResponse = "get-schema-response"





        `when`(
                ledger.buildGetSchemaRequest(verifierPerson.personDid, schemaId)
        ).thenReturn(schemaRequest)

        `when`(
                ledger.signAndSubmitRequest(poolMockito, walletMockito, verifierPerson.personDid, schemaRequest)
        ).thenReturn(getSchemaResponse)

        `when`(
                ledger.parseGetSchemaResponse(getSchemaResponse)
        ).thenReturn(parsedSchemaResponse)

        `when`(
                parsedSchemaResponse.objectJson
        ).thenReturn(schemaJSON)

        val credSchemaJSONObject = JSONObject().put(schemaId, JSONObject(schemaJSON))

        var credDefJsonObject = JSONObject().put(credentialDefinition.credDefId, JSONObject(credentialDefinition.credDefJson))

        `when`(
                verifier.verifyVerifierProof(
                        verifierPerson.name!!,
                        exampleProof,
                        exampleProofRequestJson,
                        credSchemaJSONObject.toString(),
                        credDefJsonObject.toString(),
                        JSONObject().toString(),
                        JSONObject().toString()
                )
        ).thenReturn(true)

        assertTrue(verifierWrapper.verifyProof(
                verifierPerson.name!!,
                exampleProof,
                exampleProofRequestJson,
                verifierPerson,
                schemaIds,
                credentialDefinitions)!!
        )
    }
}